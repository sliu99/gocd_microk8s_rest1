
Status: not work

6/5/2019

This project is originally from 
/home/sliu/book_code/docker_and_kubernetes_for_java_developers_2017/Docker-and-Kubernetes-for-Java-Developers-master/rest-example-multiStages


This app builds a gocd pipeline with microk8s that build, test, deploy the app.

* Use readme.github.txt to create github repository gocd_microk8s_rest1.

* Create cocd pipleline gocd_microk8s_rest1 locally with stages Build, Test and Deploy. Each stage calls a shell to print "build", "test",
    and "deploy". See readme.gocd.txt.
    
* Change the shell to do real things, such as "mvn clean package", "mvn test".
   When build, jar file is created in /var/lib/go-agent/pipelines/gocd_microk8s_rest1/target
   
   Click DASHBOARD tab on top to see pipeline status. 
   To see buildStage log,
   Double click build stage icon, click buildSourceCode link under Overview tab, click "Expand All" tab to see detailed log
  
   
* Start microk8s. see readme.start_microk8s.txt
//delete service
microk8s.kubectl delete service rest-example

* Add CreateServiceStage to create Kubernetes service
   See readme.gocd.txt. 

* Add CreateDeploymentStage to deploy
   See readme.gocd.txt.

* Add DeployStage
   See readme.gocd.txt.


After running the pipeline, 
microk8s.kubectl get services
NAME           TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)          AGE
kubernetes     ClusterIP   10.152.183.1     <none>        443/TCP          30h
rest-example   NodePort    10.152.183.130   <none>        8080:31772/TCP   3m2s

microk8s.kubectl get deployments
NAME           READY   UP-TO-DATE   AVAILABLE   AGE
rest-example   1/1     1            1           5m47s

microk8s.kubectl get pods
NAME                            READY   STATUS    RESTARTS   AGE
rest-example-54486868df-hjbkd   1/1     Running   0          6m13s

//to run dashboard
https://10.152.183.27

//Test running rest service from outside the container in pod, say at host box
curl http://localhost:31772/books
[]

//add a book
curl -H "Content-Type:application/json" -X POST http://localhost:31772/books -d '{"id":1,"author":"Krochmalski", "title":"IDEA"}'
{"id":1,"author":"Krochmalski","title":"IDEA"}

//try to list books from running container
curl http://localhost:31772/books
[{"id":1,"author":"Krochmalski","title":"IDEA"}


ifconfig   get ip=192.168.40.132

//run from pc host console
curl http://192.168.40.132:31772/books
[{"id":1,"author":"Krochmalski","title":"IDEA"}]

